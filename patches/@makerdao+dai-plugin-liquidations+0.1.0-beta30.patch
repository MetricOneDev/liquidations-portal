diff --git a/node_modules/@makerdao/dai-plugin-liquidations/contracts/addresses/kovan.json b/node_modules/@makerdao/dai-plugin-liquidations/contracts/addresses/kovan.json
deleted file mode 100644
index 63f14ef..0000000
--- a/node_modules/@makerdao/dai-plugin-liquidations/contracts/addresses/kovan.json
+++ /dev/null
@@ -1,72 +0,0 @@
-{
-  "MCD_DOG": "0x121D0953683F74e9a338D40d9b4659C0EBb539a0",
-  "MCD_END": "0x0D1a98E93d9cE32E44bC035e8C6E4209fdB70C27",
-  "MCD_ESM_BUG": "0x0798603b8AE1f76D2823aDbc2E15d047Eac1Efd7",
-  "MCD_ESM_ATTACK": "0x23Aa7cbeb266413f968D284acce3a3f9EEFFC2Ec",
-  "ILK_REGISTRY": "0xB3fBb13b831F254DbBB9a1abdb81d8D91589B3B4",
-  "CLIPPER_MOM": "0x96E9a19Be6EA91d1C0908e5E207f944dc2E7B878",
-  "MCD_CLIP_LINK_A": "0x1eB71cC879960606F8ab0E02b3668EEf92CE6D98",
-  "MCD_CLIP_CALC_LINK_A": "0xbd586d6352Fcf0C45f77FC9348F4Ee7539F6e2bD",
-  "MCD_CLIP_YFI_A": "0x9020C96B06d2ac59e98A0F35f131D491EEcAa2C2",
-  "MCD_CLIP_CALC_YFI_A": "0x54A18C6ceEBDf42D8532EBf5e0a67C430a51b2f6",
-  "MCD_CLIP_WBTC_A": "0x5518C2f409Bed4bD5FF3542d9D5002251EEDA892",
-  "MCD_CLIP_CALC_WBTC_A": "0x2c39F8C9aE16B84076D7fEA15CE5855925a09DA6",
-  "MCD_CLIP_ETH_A": "0x7dD1Fb6b9aFdBA9F28DB89c81723b8c6B27A2Fbe",
-  "MCD_CLIP_CALC_ETH_A": "0x46bE29C1993d64f0C93e81D69FfAFDF4881806f2",
-  "MCD_CLIP_ETH_B": "0x004676c737FC75A2799dFe745d23F5597620Ad43",
-  "MCD_CLIP_CALC_ETH_B": "0x4672215ADF0556Af60261e97E221c875ce9F0863",
-  "MCD_CLIP_ETH_C": "0x86D5eA244cf6c79227CA73004C963b72431f23ac",
-  "MCD_CLIP_CALC_ETH_C": "0xa8AfB2680cced6de0E1dfe5C35F0FEdFB8E95720",
-  "MCD_CLIP_UNI_A": "0xed3D15e390750f0808E64e0Af1F791e6c5b47c2e",
-  "MCD_CLIP_CALC_UNI_A": "0x1ee2ecD5149F4b46257a37195994337F4a35E5e8",
-  "MCD_CLIP_ZRX_A": "0x9072C477FEb67eEFd8865737206e87570444885E",
-  "MCD_CLIP_CALC_ZRX_A": "0xCd8Aa54176A333C3B668f65Ff8F11ee909f9A698",
-  "MCD_CLIP_AAVE_A": "0xC8D2d6692981abc7DC5Bf4E345ce3Ce462FA90c9",
-  "MCD_CLIP_CALC_AAVE_A": "0x0FdF9CecFF267a49f4e9f67014AFEc873143677D",
-  "MCD_CLIP_BAT_A": "0x332B44A24e2CF8A258E8A1932b13296b9316a74c",
-  "MCD_CLIP_CALC_BAT_A": "0x4AB9058A9cAB0B18B4b40621Fa44B2131836Ad32",
-  "MCD_CLIP_RENBTC_A": "0xEf9EEb37CDB15eaD336440BebC30C4CD37Da1891",
-  "MCD_CLIP_CALC_RENBTC_A": "0xF47749299BCCe427cFd9d015D543aEF83D3BD4Da",
-  "MCD_CLIP_LRC_A": "0xaF94A206A3f3948c0BDB6a195a119862F26F5e92",
-  "MCD_CLIP_CALC_LRC_A": "0xD47DF2Cae1a86fC22e8A8b9B06b22f27860Cb333",
-  "MCD_CLIP_MANA_A": "0xFd79e5881CC59F4637ddb3799D302BF089dEE832",
-  "MCD_CLIP_CALC_MANA_A": "0x14cd62bB700d3cDe2bC45Db2875b58200DDD2503",
-  "MCD_CLIP_COMP_A": "0xCDe79465D0B98775c1831957b88BFa12b8A3f020",
-  "MCD_CLIP_CALC_COMP_A": "0x3e41fCB2DC5370F8612884CB2928E74FED77Cb4B",
-  "MCD_CLIP_KNC_A": "0x09EA13E49885C29dD270B5c3F557D71A30479333",
-  "MCD_CLIP_CALC_KNC_A": "0x8D11DC42F5Cc6fE19FeE799e3e24b506cEadAB4b",
-  "MCD_CLIP_BAL_A": "0x8F6C48A26ebf4006Ab542d030D4090DfeC39652E",
-  "MCD_CLIP_CALC_BAL_A": "0xd041ED45EC5e4539BbbCd91B97D36C76F9d678C9",
-  "MCD_CLIP_UNIV2DAIETH_A": "0xfcFd4255F67C70Cf5fB534535eBe8152Ba6DC5Cd",
-  "MCD_CLIP_CALC_UNIV2DAIETH_A": "0x0Aa53A82182dd60a630A49eCc286b295fEC5Ba98",
-  "MCD_CLIP_UNIV2USDCETH_A": "0xfcFd4255F67C70Cf5fB534535eBe8152Ba6DC5Cd",
-  "MCD_CLIP_CALC_UNIV2USDCETH_A": "0x0Aa53A82182dd60a630A49eCc286b295fEC5Ba98",
-  "MCD_CLIP_UNIV2ETHUSDT_A": "0xfcFd4255F67C70Cf5fB534535eBe8152Ba6DC5Cd",
-  "MCD_CLIP_CALC_UNIV2ETHUSDT_A": "0x0Aa53A82182dd60a630A49eCc286b295fEC5Ba98",
-  "MCD_CLIP_UNIV2WBTCDAI_A": "0xfcFd4255F67C70Cf5fB534535eBe8152Ba6DC5Cd",
-  "MCD_CLIP_CALC_UNIV2WBTCDAI_A": "0x0Aa53A82182dd60a630A49eCc286b295fEC5Ba98",
-  "MCD_CLIP_UNIV2WBTCETH_A": "0xfcFd4255F67C70Cf5fB534535eBe8152Ba6DC5Cd",
-  "MCD_CLIP_CALC_UNIV2WBTCETH_A": "0x0Aa53A82182dd60a630A49eCc286b295fEC5Ba98",
-  "MCD_CLIP_UNIV2LINKETH_A": "0xfcFd4255F67C70Cf5fB534535eBe8152Ba6DC5Cd",
-  "MCD_CLIP_CALC_UNIV2LINKETH_A": "0x0Aa53A82182dd60a630A49eCc286b295fEC5Ba98",
-  "MCD_CLIP_UNIV2UNIETH_A": "0xfcFd4255F67C70Cf5fB534535eBe8152Ba6DC5Cd",
-  "MCD_CLIP_CALC_UNIV2UNIETH_A": "0x0Aa53A82182dd60a630A49eCc286b295fEC5Ba98",
-  "MCD_CLIP_UNIV2AAVEETH_A": "0xfcFd4255F67C70Cf5fB534535eBe8152Ba6DC5Cd",
-  "MCD_CLIP_CALC_UNIV2AAVEETH_A": "0x0Aa53A82182dd60a630A49eCc286b295fEC5Ba98",
-  "MCD_CLIP_UNIV2DAIUSDT_A": "0xfcFd4255F67C70Cf5fB534535eBe8152Ba6DC5Cd",
-  "MCD_CLIP_CALC_UNIV2DAIUSDT_A": "0x0Aa53A82182dd60a630A49eCc286b295fEC5Ba98",
-  "MCD_CLIP_UNIV2DAIUSDC_A": "0xfcFd4255F67C70Cf5fB534535eBe8152Ba6DC5Cd",
-  "MCD_CLIP_CALC_UNIV2DAIUSDC_A": "0x0Aa53A82182dd60a630A49eCc286b295fEC5Ba98",
-  "MCD_CLIP_USDC_A": "0x09D45087c035DbcD8d6fB5e9d4c5341b9101E626",
-  "MCD_CLIP_CALC_USDC_A": "0xF8D26c26Ac481794E4Aebf4F35B10d8E9748086a",
-  "MCD_CLIP_USDC_B": "0xedFc36f75faafa80e39cd4623def15da6CF2B5C0",
-  "MCD_CLIP_CALC_USDC_B": "0x275076c9c101AF880BD944991258d564FA31D61B",
-  "MCD_CLIP_TUSD_A": "0x9D547d599489B3950485cBa119FC37Bba9c15c13",
-  "MCD_CLIP_CALC_TUSD_A": "0x4AE93701287b8C86f17E5a0Cb4D0732b5ae6EFBD",
-  "MCD_CLIP_PAXUSD_A": "0x3939B686a0A7265512D38Ea3fe700812A703BF31",
-  "MCD_CLIP_CALC_PAXUSD_A": "0x784863edC4C28D73192bf56944D8803c0b5E0CbF",
-  "MCD_CLIP_GUSD_A": "0x448eD0ff4e154C1cBefE2c8057906Dd3dA194dA5",
-  "MCD_CLIP_CALC_GUSD_A": "0x4DD8AaB74a710E7a95937ef1b2618ee76F829Ba6",
-  "MCD_CLIP_USDT_A": "0xBDd2d10dAF8D86dA1f02bB7c7C7841bC9A4F62D4",
-  "MCD_CLIP_CALC_USDT_A": "0xa3a5163Fa4d46D799fE4B036349f0289D69A4445"
-}
diff --git a/node_modules/@makerdao/dai-plugin-liquidations/contracts/addresses/mainnet.json b/node_modules/@makerdao/dai-plugin-liquidations/contracts/addresses/mainnet.json
deleted file mode 100644
index 371af36..0000000
--- a/node_modules/@makerdao/dai-plugin-liquidations/contracts/addresses/mainnet.json
+++ /dev/null
@@ -1,71 +0,0 @@
-{
-  "MCD_DOG": "0x135954d155898D42C90D2a57824C690e0c7BEf1B",
-  "MCD_END": "0xBB856d1742fD182a90239D7AE85706C2FE4e5922",
-  "MCD_ESM": "0x29CfBd381043D00a98fD9904a431015Fef07af2f",
-  "ILK_REGISTRY": "0x5a464C28D19848f44199D003BeF5ecc87d090F87",
-  "CLIPPER_MOM": "0x79FBDF16b366DFb14F66cE4Ac2815Ca7296405A0",
-  "MCD_CLIP_LINK_A": "0x832Dd5f17B30078a5E46Fdb8130A68cBc4a74dC0",
-  "MCD_CLIP_CALC_LINK_A": "0x7B1696677107E48B152e9Bf400293e98B7D86Eb1",
-  "MCD_CLIP_YFI_A": "0x9daCc11dcD0aa13386D295eAeeBBd38130897E6f",
-  "MCD_CLIP_CALC_YFI_A": "0x1f206d7916Fd3B1b5B0Ce53d5Cab11FCebc124DA",
-  "MCD_CLIP_WBTC_A": "0x0227b54AdbFAEec5f1eD1dFa11f54dcff9076e2C",
-  "MCD_CLIP_CALC_WBTC_A": "0x5f4CEa97ca1030C6Bd38429c8a0De7Cd4981C70A",
-  "MCD_CLIP_ETH_A": "0xc67963a226eddd77B91aD8c421630A1b0AdFF270",
-  "MCD_CLIP_CALC_ETH_A": "0x7d9f92DAa9254Bbd1f479DBE5058f74C2381A898",
-  "MCD_CLIP_ETH_B": "0x71eb894330e8a4b96b8d6056962e7F116F50e06F",
-  "MCD_CLIP_CALC_ETH_B": "0x19E26067c4a69B9534adf97ED8f986c49179dE18",
-  "MCD_CLIP_ETH_C": "0xc2b12567523e3f3CBd9931492b91fe65b240bc47",
-  "MCD_CLIP_CALC_ETH_C": "0x1c4fC274D12b2e1BBDF97795193D3148fCDa6108",
-  "MCD_CLIP_UNI_A": "0x3713F83Ee6D138Ce191294C131148176015bC29a",
-  "MCD_CLIP_CALC_UNI_A": "0xeA7FE6610e6708E2AFFA202948cA19ace3F580AE",
-  "MCD_CLIP_ZRX_A": "0xdc90d461E148552387f3aB3EBEE0Bdc58Aa16375",
-  "MCD_CLIP_CALC_ZRX_A": "0xebe5e9D77b9DBBA8907A197f4c2aB00A81fb0C4e",
-  "MCD_CLIP_AAVE_A": "0x8723b74F598DE2ea49747de5896f9034CC09349e",
-  "MCD_CLIP_CALC_AAVE_A": "0x76024a8EfFCFE270e089964a562Ece6ea5f3a14C",
-  "MCD_CLIP_BAT_A": "0x3D22e6f643e2F4c563fD9db22b229Cbb0Cd570fb",
-  "MCD_CLIP_CALC_BAT_A": "0x2e118153D304a0d9C5838D5FCb70CEfCbEc81DC2",
-  "MCD_CLIP_RENBTC_A": "0x834719BEa8da68c46484E001143bDDe29370a6A3",
-  "MCD_CLIP_CALC_RENBTC_A": "0xcC89F368aad8D424d3e759c1525065e56019a0F4",
-  "MCD_CLIP_LRC_A": "0x81C5CDf4817DBf75C7F08B8A1cdaB05c9B3f70F7",
-  "MCD_CLIP_CALC_LRC_A": "0x6856CCA4c881CAf29B6563bA046C7Bb73121fb9d",
-  "MCD_CLIP_MANA_A": "0xF5C8176E1eB0915359E46DEd16E52C071Bb435c0",
-  "MCD_CLIP_CALC_MANA_A": "0xABbCd14FeDbb2D39038327055D9e615e178Fd64D",
-  "MCD_CLIP_COMP_A": "0x2Bb690931407DCA7ecE84753EA931ffd304f0F38",
-  "MCD_CLIP_CALC_COMP_A": "0x1f546560EAa70985d962f1562B65D4B182341a63",
-  "MCD_CLIP_KNC_A": "0x006Aa3eB5E666D8E006aa647D4afAB212555Ddea",
-  "MCD_CLIP_CALC_KNC_A": "0x82c41e2ADE28C066a5D3A1E3f5B444a4075C1584",
-  "MCD_CLIP_BAL_A": "0x6AAc067bb903E633A422dE7BE9355E62B3CE0378",
-  "MCD_CLIP_CALC_BAL_A": "0x79564a41508DA86721eDaDac07A590b5A51B2c01",
-  "MCD_CLIP_UNIV2DAIETH_A": "0x9F6981bA5c77211A34B76c6385c0f6FA10414035",
-  "MCD_CLIP_CALC_UNIV2DAIETH_A": "0xf738C272D648Cc4565EaFb43c0C5B35BbA3bf29d",
-  "MCD_CLIP_UNIV2USDCETH_A": "0x93AE03815BAF1F19d7F18D9116E4b637cc32A131",
-  "MCD_CLIP_CALC_UNIV2USDCETH_A": "0x022ff40643e8b94C43f0a1E54f51EF6D070AcbC4",
-  "MCD_CLIP_UNIV2ETHUSDT_A": "0x2aC4C9b49051275AcB4C43Ec973082388D015D48",
-  "MCD_CLIP_CALC_UNIV2ETHUSDT_A": "0xA475582E3D6Ec35091EaE81da3b423C1B27fa029",
-  "MCD_CLIP_UNIV2WBTCDAI_A": "0x4fC53a57262B87ABDa61d6d0DB2bE7E9BE68F6b8",
-  "MCD_CLIP_CALC_UNIV2WBTCDAI_A": "0x863AEa7D2c4BF2B5Aa191B057240b6Dc29F532eB",
-  "MCD_CLIP_UNIV2WBTCETH_A": "0xb15afaB996904170f87a64Fe42db0b64a6F75d24",
-  "MCD_CLIP_CALC_UNIV2WBTCETH_A": "0xC94ee71e909DbE08d63aA9e6EFbc9976751601B4",
-  "MCD_CLIP_UNIV2LINKETH_A": "0x6aa0520354d1b84e1C6ABFE64a708939529b619e",
-  "MCD_CLIP_CALC_UNIV2LINKETH_A": "0x8aCeC2d937a4A4cAF42565aFbbb05ac242134F14",
-  "MCD_CLIP_UNIV2UNIETH_A": "0xb0ece6F5542A4577E2f1Be491A937Ccbbec8479e",
-  "MCD_CLIP_CALC_UNIV2UNIETH_A": "0xad609Ed16157014EF955C94553E40e94A09049f0",
-  "MCD_CLIP_UNIV2AAVEETH_A": "0x854b252BA15eaFA4d1609D3B98e00cc10084Ec55",
-  "MCD_CLIP_CALC_UNIV2AAVEETH_A": "0x5396e541E1F648EC03faf338389045F1D7691960",
-  "MCD_CLIP_UNIV2DAIUSDT_A": "0xe4B82Be84391b9e7c56a1fC821f47569B364dd4a",
-  "MCD_CLIP_CALC_UNIV2DAIUSDT_A": "0x4E88cE740F6bEa31C2b14134F6C5eB2a63104fcF",
-  "MCD_CLIP_UNIV2DAIUSDC_A": "0x9B3310708af333f6F379FA42a5d09CBAA10ab309",
-  "MCD_CLIP_CALC_UNIV2DAIUSDC_A": "0xbEF2ab2aA5CC780A03bccf22AD3320c8CF35af6A",
-  "MCD_CLIP_USDC_A": "0x046b1A5718da6A226D912cFd306BA19980772908",
-  "MCD_CLIP_CALC_USDC_A": "0x0FCa4ba0B80123b5d22dD3C8BF595F3E561d594D",
-  "MCD_CLIP_USDC_B": "0x5590F23358Fe17361d7E4E4f91219145D8cCfCb3",
-  "MCD_CLIP_CALC_USDC_B": "0xD6FE411284b92d309F79e502Dd905D7A3b02F561",
-  "MCD_CLIP_TUSD_A": "0x0F6f88f8A4b918584E3539182793a0C276097f44",
-  "MCD_CLIP_CALC_TUSD_A": "0x059acdf311E38aAF77139638228d393Ff27639bF",
-  "MCD_CLIP_PAXUSD_A": "0xBCb396Cd139D1116BD89562B49b9D1d6c25378B0",
-  "MCD_CLIP_CALC_PAXUSD_A": "0xAB98De83840b8367046383D2Adef9959E130923e",
-  "MCD_CLIP_GUSD_A": "0xa47D68b9dB0A0361284fA04BA40623fcBd1a263E",
-  "MCD_CLIP_CALC_GUSD_A": "0xF7e80359Cb9C4E6D178E6689eD8A6A6f91060747",
-  "MCD_CLIP_USDT_A": "0xFC9D6Dd08BEE324A5A8B557d2854B9c36c2AeC5d",
-  "MCD_CLIP_CALC_USDT_A": "0x1Cf3DE6D570291CDB88229E70037d1705d5be748"
-}
diff --git a/node_modules/@makerdao/dai-plugin-liquidations/contracts/addresses/velas.json b/node_modules/@makerdao/dai-plugin-liquidations/contracts/addresses/velas.json
new file mode 100644
index 0000000..1fc7414
--- /dev/null
+++ b/node_modules/@makerdao/dai-plugin-liquidations/contracts/addresses/velas.json
@@ -0,0 +1,17 @@
+{
+  "MCD_DOG": "0x7e4D6C2E61412386f4A07268E6Cf22896B2a392d",
+  "MCD_END": "0x47357DA229898573651B538CBc919D5eb47210fe",
+  "MCD_ESM": "0x63aCA4a3FF50AF881566113552Ac7f87c221C09D",
+  "ILK_REGISTRY": "0x6E2faD71Bb6a6cA86D204f1EbbB152855A9295dF",
+  "CLIPPER_MOM": "0xBD4B941e9D68b5DFb984efcFd78AbAf2eA5da45F",
+  "MCD_CLIP_VLX_A": "0x7E7dcd51167f02e240f738c1E81e93A1eDB16233",
+  "MCD_CLIP_CALC_VLX_A": "0xa2fCdEa108cE4BE575610020A929B3E8294739ac",
+  "MCD_CLIP_WAG_A": "0x35a5CC1670Ec38B1a310eE2C97C0BC469151a3a3",
+  "MCD_CLIP_CALC_WAG_A": "0xeFF499aE6860687037FaE9EA1B53B973F7C2Ddf7",
+  "MCD_CLIP_WBTC_A": "0xabc2DbECB28B220fa1a70393519A473Af4A5A553",
+  "MCD_CLIP_CALC_WBTC_A": "0x60A1AF92B1e96b637FCedcc6b2716e78faB95764",
+  "MCD_CLIP_VDGT_A": "0xFB065FA2b9Eb9f432F134b5610efFae632F17563",
+  "MCD_CLIP_CALC_VDGT_A": "0x97ecBC8E9cC2fFBFE083A626853e116b08D8AF4a",
+  "MCD_CLIP_WAG_VLXVDGT_A": "0x4FE6A5b19C1f591Ddced2C0ea616dBb8E4Ca32ef",
+  "MCD_CLIP_CALC_WAG_VLXVDGT_A": "0x37Adc6EE245ed53ad755B30d25911EC2647F6CE8"
+}
diff --git a/node_modules/@makerdao/dai-plugin-liquidations/contracts/addresses/velastestnet.json b/node_modules/@makerdao/dai-plugin-liquidations/contracts/addresses/velastestnet.json
new file mode 100644
index 0000000..15d75ee
--- /dev/null
+++ b/node_modules/@makerdao/dai-plugin-liquidations/contracts/addresses/velastestnet.json
@@ -0,0 +1,17 @@
+{
+  "MCD_DOG": "0x5D45Fb492270781d8744c8394d7C8B56Ea03860F",
+  "MCD_END": "0xF73b59012050e90af32A7e0caC469402354F587F",
+  "MCD_ESM": "0x133e9bF20B035e1061001b3e9D60AD5f55F85545",
+  "ILK_REGISTRY": "0x240C0fDCc37BA59B9ea057e55a0fa9E85C51BbFE",
+  "CLIPPER_MOM": "0x43d8e00BBe384a2A8CD393fAa6BFFE4C8Fb030ef",
+  "MCD_CLIP_VLX_A": "0x0F09d02D0510d7724c9CfB39adF9C0A9842bAb08",
+  "MCD_CLIP_CALC_VLX_A": "0xD6e0b48E8377D71157CEdA6aF34338A67D61b7dD",
+  "MCD_CLIP_WAG_A": "0x844732956Be42610fD05F4BBC270A0434BFc75E0",
+  "MCD_CLIP_CALC_WAG_A": "0x878aa2a43987C1811fD054ba27f022D615B66230",
+  "MCD_CLIP_VDGT_A": "0x7D36e24dE1e9a323f58490a775D964f86D498970",
+  "MCD_CLIP_CALC_VDGT_A": "0xB9Ba44dc352e84c9329858a737A11888cF7D60f9",
+  "MCD_CLIP_WBTC_A": "0x0A136ED5fAbe9eD2871E85B1D07C5f648eAe08D0",
+  "MCD_CLIP_CALC_WBTC_A": "0x1FB7F7C4d84DD148d4149FC1E56f495D14C909D1",
+  "MCD_CLIP_WAG_VLXVDGT_A": "0x4FE6A5b19C1f591Ddced2C0ea616dBb8E4Ca32ef",
+  "MCD_CLIP_CALC_WAG_VLXVDGT_A": "0x37Adc6EE245ed53ad755B30d25911EC2647F6CE8"
+}
diff --git a/node_modules/@makerdao/dai-plugin-liquidations/contracts/contract-info.json b/node_modules/@makerdao/dai-plugin-liquidations/contracts/contract-info.json
index 8e448e0..6b5b6b7 100644
--- a/node_modules/@makerdao/dai-plugin-liquidations/contracts/contract-info.json
+++ b/node_modules/@makerdao/dai-plugin-liquidations/contracts/contract-info.json
@@ -2,7 +2,9 @@
   "chief": {
     "inception_block": {
       "mainnet": "0x487813",
-      "kovan": "0x649575"
+      "kovan": "0x649575",
+      "velas": "0x10d16",
+      "velastestnet": "0x1195f1"
     },
     "events": {
       "etch": "0x4f0892983790f53eea39a7a496f6cb40e8811b313871337b6a761efc6c67bb1f",
@@ -15,7 +17,9 @@
   "pause": {
     "inception_block": {
       "mainnet": "8928171",
-      "kovan": "14764552"
+      "kovan": "14764552",
+      "velas": "68886",
+      "velastestnet": "1152497"
     },
     "events": {
       "exec": "0x168ccd6700000000000000000000000000000000000000000000000000000000",
diff --git a/node_modules/@makerdao/dai-plugin-liquidations/dist/LiquidationService.js b/node_modules/@makerdao/dai-plugin-liquidations/dist/LiquidationService.js
index f183561..dae5810 100644
--- a/node_modules/@makerdao/dai-plugin-liquidations/dist/LiquidationService.js
+++ b/node_modules/@makerdao/dai-plugin-liquidations/dist/LiquidationService.js
@@ -41,8 +41,9 @@ function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflec
 
 function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }
 
-var MAINNET_SERVER_URL = 'https://api.makerdao.com/graphql'; //const LOCAL_URL = 'http://localhost:3001/graphql';
-// const LOCAL_URL = 'https://dd0965745ea7.ngrok.io/graphql'; // temporary ngrok
+var VELAS_SERVER_URL = 'https://api.makerdao.com/graphql';
+var MAINNET_SERVER_URL = 'https://api.makerdao.com/graphql';
+//const LOCAL_URL = 'http://localhost:3001/graphql';
 
 var RAD = new _bignumber["default"]('1e45');
 exports.RAD = RAD;
@@ -95,12 +96,20 @@ var LiquidationService = (_class = /*#__PURE__*/function (_PublicService) {
         case 1:
           this.serverUrl = MAINNET_SERVER_URL;
           break;
+        case 'velas':
+        case 106:
+          this.serverUrl = VELAS_SERVER_URL;
+          break;
+        // case 'velastestnet':
+        // case 111:
+        //   this.serverUrl = VELASTESTNET_SERVER_URL;
+        //   break;
         // case 999:
         //   this.serverUrl = LOCAL_URL;
         // break;
 
         default:
-          this.serverUrl = MAINNET_SERVER_URL;
+          this.serverUrl = VELAS_SERVER_URL;
       }
     }
   }, {
@@ -390,7 +399,7 @@ var LiquidationService = (_class = /*#__PURE__*/function (_PublicService) {
     /* TAKE
       uint256 id,           // Auction id
       uint256 amt,          // Upper limit on amount of collateral to buy  [wad]
-      uint256 max,          // Maximum acceptable price (DAI / collateral) [ray]
+      uint256 max,          // Maximum acceptable price (USDV / collateral) [ray]
       address who,          // Receiver of collateral and external call address
       bytes calldata data   // Data to pass in external call; if length 0, no call is done
     */
@@ -490,7 +499,7 @@ var LiquidationService = (_class = /*#__PURE__*/function (_PublicService) {
     }()
     /* struct Sale {
           uint256 pos;  // Index in active array
-          uint256 tab;  // Dai to raise       [rad]
+          uint256 tab;  // Usdv to raise       [rad]
           uint256 lot;  // collateral to sell [wad]
           address usr;  // Liquidated CDP
           uint96  tic;  // Auction start time
@@ -788,9 +797,9 @@ var LiquidationService = (_class = /*#__PURE__*/function (_PublicService) {
     // }
 
   }, {
-    key: "joinDaiToAdapter",
+    key: "joinUsdvToAdapter",
     value: function () {
-      var _joinDaiToAdapter = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee18(amount, _ref2) {
+      var _joinUsdvToAdapter = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee18(amount, _ref2) {
         var promise, address, amt;
         return _regenerator["default"].wrap(function _callee18$(_context18) {
           while (1) {
@@ -800,7 +809,7 @@ var LiquidationService = (_class = /*#__PURE__*/function (_PublicService) {
                 address = this.get('web3').currentAddress();
                 amt = (0, _bignumber["default"])(amount).times(WAD).toFixed();
                 _context18.next = 5;
-                return this._joinDaiAdapter().join(address, amt, {
+                return this._joinUsdvAdapter().join(address, amt, {
                   promise: promise
                 });
 
@@ -815,16 +824,16 @@ var LiquidationService = (_class = /*#__PURE__*/function (_PublicService) {
         }, _callee18, this);
       }));
 
-      function joinDaiToAdapter(_x26, _x27) {
-        return _joinDaiToAdapter.apply(this, arguments);
+      function joinUsdvToAdapter(_x26, _x27) {
+        return _joinUsdvToAdapter.apply(this, arguments);
       }
 
-      return joinDaiToAdapter;
+      return joinUsdvToAdapter;
     }()
   }, {
-    key: "exitDaiFromAdapter",
+    key: "exitUsdvFromAdapter",
     value: function () {
-      var _exitDaiFromAdapter = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee19(amount, _ref3) {
+      var _exitUsdvFromAdapter = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee19(amount, _ref3) {
         var promise, address, amt;
         return _regenerator["default"].wrap(function _callee19$(_context19) {
           while (1) {
@@ -834,7 +843,7 @@ var LiquidationService = (_class = /*#__PURE__*/function (_PublicService) {
                 address = this.get('web3').currentAddress();
                 amt = (0, _bignumber["default"])(amount).times(WAD).toFixed();
                 _context19.next = 5;
-                return this._joinDaiAdapter().exit(address, amt, {
+                return this._joinUsdvAdapter().exit(address, amt, {
                   promise: promise
                 });
 
@@ -849,17 +858,18 @@ var LiquidationService = (_class = /*#__PURE__*/function (_PublicService) {
         }, _callee19, this);
       }));
 
-      function exitDaiFromAdapter(_x28, _x29) {
-        return _exitDaiFromAdapter.apply(this, arguments);
+      function exitUsdvFromAdapter(_x28, _x29) {
+        return _exitUsdvFromAdapter.apply(this, arguments);
       }
 
-      return exitDaiFromAdapter;
+      return exitUsdvFromAdapter;
     }()
   }, {
     key: "exitGemFromAdapter",
     value: function () {
       var _exitGemFromAdapter = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee20(ilk, amount, _ref4) {
         var promise, address, amt;
+
         return _regenerator["default"].wrap(function _callee20$(_context20) {
           while (1) {
             switch (_context20.prev = _context20.next) {
@@ -942,9 +952,9 @@ var LiquidationService = (_class = /*#__PURE__*/function (_PublicService) {
       return this.get('smartContract').getContractByName('MCD_DOG');
     }
   }, {
-    key: "_joinDaiAdapter",
-    value: function _joinDaiAdapter() {
-      return this.get('smartContract').getContractByName('MCD_JOIN_DAI');
+    key: "_joinUsdvAdapter",
+    value: function _joinUsdvAdapter() {
+      return this.get('smartContract').getContractByName('MCD_JOIN_USDV');
     }
   }, {
     key: "_joinGemAdapter",
@@ -954,5 +964,5 @@ var LiquidationService = (_class = /*#__PURE__*/function (_PublicService) {
     }
   }]);
   return LiquidationService;
-}(_servicesCore.PublicService), ((0, _applyDecoratedDescriptor2["default"])(_class.prototype, "take", [_tracksTransactions["default"]], Object.getOwnPropertyDescriptor(_class.prototype, "take"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "joinDaiToAdapter", [_tracksTransactions["default"]], Object.getOwnPropertyDescriptor(_class.prototype, "joinDaiToAdapter"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "exitDaiFromAdapter", [_tracksTransactions["default"]], Object.getOwnPropertyDescriptor(_class.prototype, "exitDaiFromAdapter"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "exitGemFromAdapter", [_tracksTransactions["default"]], Object.getOwnPropertyDescriptor(_class.prototype, "exitGemFromAdapter"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "bark", [_tracksTransactions["default"]], Object.getOwnPropertyDescriptor(_class.prototype, "bark"), _class.prototype)), _class);
+}(_servicesCore.PublicService), ((0, _applyDecoratedDescriptor2["default"])(_class.prototype, "take", [_tracksTransactions["default"]], Object.getOwnPropertyDescriptor(_class.prototype, "take"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "joinUsdvToAdapter", [_tracksTransactions["default"]], Object.getOwnPropertyDescriptor(_class.prototype, "joinUsdvToAdapter"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "exitUsdvFromAdapter", [_tracksTransactions["default"]], Object.getOwnPropertyDescriptor(_class.prototype, "exitUsdvFromAdapter"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "exitGemFromAdapter", [_tracksTransactions["default"]], Object.getOwnPropertyDescriptor(_class.prototype, "exitGemFromAdapter"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "bark", [_tracksTransactions["default"]], Object.getOwnPropertyDescriptor(_class.prototype, "bark"), _class.prototype)), _class);
 exports["default"] = LiquidationService;
\ No newline at end of file
diff --git a/node_modules/@makerdao/dai-plugin-liquidations/dist/index.js b/node_modules/@makerdao/dai-plugin-liquidations/dist/index.js
index 7e18e96..d260c6e 100644
--- a/node_modules/@makerdao/dai-plugin-liquidations/dist/index.js
+++ b/node_modules/@makerdao/dai-plugin-liquidations/dist/index.js
@@ -24,8 +24,10 @@ var _default = {
     var _ref$vulcanize = _ref.vulcanize,
         vulcanize = _ref$vulcanize === void 0 ? true : _ref$vulcanize;
     var contractAddresses = {
-      kovan: require('../contracts/addresses/kovan.json'),
-      mainnet: require('../contracts/addresses/mainnet.json')
+      // kovan: require('../contracts/addresses/kovan.json'),
+      // mainnet: require('../contracts/addresses/mainnet.json'),
+      velas: require('../contracts/addresses/velas.json'),
+      velastestnet: require('../contracts/addresses/velastestnet.json'),
     };
 
     try {
diff --git a/node_modules/@makerdao/dai-plugin-liquidations/dist/utils/constants.js b/node_modules/@makerdao/dai-plugin-liquidations/dist/utils/constants.js
index b58a551..c7c624c 100644
--- a/node_modules/@makerdao/dai-plugin-liquidations/dist/utils/constants.js
+++ b/node_modules/@makerdao/dai-plugin-liquidations/dist/utils/constants.js
@@ -3,72 +3,20 @@
 Object.defineProperty(exports, "__esModule", {
   value: true
 });
-exports.ALL_CLIPS = exports.MCD_CLIP_USDT_A = exports.MCD_CLIP_GUSD_A = exports.MCD_CLIP_PAXUSD_A = exports.MCD_CLIP_TUSD_A = exports.MCD_CLIP_USDC_B = exports.MCD_CLIP_USDC_A = exports.MCD_CLIP_UNIV2DAIUSDC_A = exports.MCD_CLIP_UNIV2DAIUSDT_A = exports.MCD_CLIP_UNIV2AAVEETH_A = exports.MCD_CLIP_UNIV2UNIETH_A = exports.MCD_CLIP_UNIV2LINKETH_A = exports.MCD_CLIP_UNIV2WBTCETH_A = exports.MCD_CLIP_UNIV2WBTCDAI_A = exports.MCD_CLIP_UNIV2ETHUSDT_A = exports.MCD_CLIP_UNIV2USDCETH_A = exports.MCD_CLIP_UNIV2DAIETH_A = exports.MCD_CLIP_ZRX_A = exports.MCD_CLIP_YFI_A = exports.MCD_CLIP_WBTC_A = exports.MCD_CLIP_UNI_A = exports.MCD_CLIP_RENBTC_A = exports.MCD_CLIP_MANA_A = exports.MCD_CLIP_LRC_A = exports.MCD_CLIP_LINK_A = exports.MCD_CLIP_KNC_A = exports.MCD_CLIP_ETH_C = exports.MCD_CLIP_ETH_B = exports.MCD_CLIP_ETH_A = exports.MCD_CLIP_COMP_A = exports.MCD_CLIP_BAT_A = exports.MCD_CLIP_BAL_A = exports.MCD_CLIP_AAVE_A = exports.MCD_DOG = void 0;
+exports.ALL_CLIPS = exports.MCD_DOG = exports.MCD_CLIP_VLX_A = exports.MCD_CLIP_WAG_A = exports.MCD_CLIP_VDGT_A = exports.MCD_CLIP_WBTC_A = exports.MCD_CLIP_WAG_VLXVDGT_A = void 0;
+
 var MCD_DOG = 'MCD_DOG';
 exports.MCD_DOG = MCD_DOG;
-var MCD_CLIP_AAVE_A = 'MCD_CLIP_AAVE_A';
-exports.MCD_CLIP_AAVE_A = MCD_CLIP_AAVE_A;
-var MCD_CLIP_BAL_A = 'MCD_CLIP_BAL_A';
-exports.MCD_CLIP_BAL_A = MCD_CLIP_BAL_A;
-var MCD_CLIP_BAT_A = 'MCD_CLIP_BAT_A';
-exports.MCD_CLIP_BAT_A = MCD_CLIP_BAT_A;
-var MCD_CLIP_COMP_A = 'MCD_CLIP_COMP_A';
-exports.MCD_CLIP_COMP_A = MCD_CLIP_COMP_A;
-var MCD_CLIP_ETH_A = 'MCD_CLIP_ETH_A';
-exports.MCD_CLIP_ETH_A = MCD_CLIP_ETH_A;
-var MCD_CLIP_ETH_B = 'MCD_CLIP_ETH_B';
-exports.MCD_CLIP_ETH_B = MCD_CLIP_ETH_B;
-var MCD_CLIP_ETH_C = 'MCD_CLIP_ETH_C';
-exports.MCD_CLIP_ETH_C = MCD_CLIP_ETH_C;
-var MCD_CLIP_KNC_A = 'MCD_CLIP_KNC_A';
-exports.MCD_CLIP_KNC_A = MCD_CLIP_KNC_A;
-var MCD_CLIP_LINK_A = 'MCD_CLIP_LINK_A';
-exports.MCD_CLIP_LINK_A = MCD_CLIP_LINK_A;
-var MCD_CLIP_LRC_A = 'MCD_CLIP_LRC_A';
-exports.MCD_CLIP_LRC_A = MCD_CLIP_LRC_A;
-var MCD_CLIP_MANA_A = 'MCD_CLIP_MANA_A';
-exports.MCD_CLIP_MANA_A = MCD_CLIP_MANA_A;
-var MCD_CLIP_RENBTC_A = 'MCD_CLIP_RENBTC_A';
-exports.MCD_CLIP_RENBTC_A = MCD_CLIP_RENBTC_A;
-var MCD_CLIP_UNI_A = 'MCD_CLIP_UNI_A';
-exports.MCD_CLIP_UNI_A = MCD_CLIP_UNI_A;
+var MCD_CLIP_VLX_A = 'MCD_CLIP_VLX_A';
+exports.MCD_CLIP_VLX_A = MCD_CLIP_VLX_A;
+var MCD_CLIP_WAG_A = 'MCD_CLIP_WAG_A';
+exports.MCD_CLIP_WAG_A = MCD_CLIP_WAG_A;
+var MCD_CLIP_VDGT_A = 'MCD_CLIP_VDGT_A';
+exports.MCD_CLIP_VDGT_A = MCD_CLIP_VDGT_A;
 var MCD_CLIP_WBTC_A = 'MCD_CLIP_WBTC_A';
 exports.MCD_CLIP_WBTC_A = MCD_CLIP_WBTC_A;
-var MCD_CLIP_YFI_A = 'MCD_CLIP_YFI_A';
-exports.MCD_CLIP_YFI_A = MCD_CLIP_YFI_A;
-var MCD_CLIP_ZRX_A = 'MCD_CLIP_ZRX_A';
-exports.MCD_CLIP_ZRX_A = MCD_CLIP_ZRX_A;
-var MCD_CLIP_UNIV2DAIETH_A = 'MCD_CLIP_UNIV2DAIETH_A';
-exports.MCD_CLIP_UNIV2DAIETH_A = MCD_CLIP_UNIV2DAIETH_A;
-var MCD_CLIP_UNIV2USDCETH_A = 'MCD_CLIP_UNIV2USDCETH_A';
-exports.MCD_CLIP_UNIV2USDCETH_A = MCD_CLIP_UNIV2USDCETH_A;
-var MCD_CLIP_UNIV2ETHUSDT_A = 'MCD_CLIP_UNIV2ETHUSDT_A';
-exports.MCD_CLIP_UNIV2ETHUSDT_A = MCD_CLIP_UNIV2ETHUSDT_A;
-var MCD_CLIP_UNIV2WBTCDAI_A = 'MCD_CLIP_UNIV2WBTCDAI_A';
-exports.MCD_CLIP_UNIV2WBTCDAI_A = MCD_CLIP_UNIV2WBTCDAI_A;
-var MCD_CLIP_UNIV2WBTCETH_A = 'MCD_CLIP_UNIV2WBTCETH_A';
-exports.MCD_CLIP_UNIV2WBTCETH_A = MCD_CLIP_UNIV2WBTCETH_A;
-var MCD_CLIP_UNIV2LINKETH_A = 'MCD_CLIP_UNIV2LINKETH_A';
-exports.MCD_CLIP_UNIV2LINKETH_A = MCD_CLIP_UNIV2LINKETH_A;
-var MCD_CLIP_UNIV2UNIETH_A = 'MCD_CLIP_UNIV2UNIETH_A';
-exports.MCD_CLIP_UNIV2UNIETH_A = MCD_CLIP_UNIV2UNIETH_A;
-var MCD_CLIP_UNIV2AAVEETH_A = 'MCD_CLIP_UNIV2AAVEETH_A';
-exports.MCD_CLIP_UNIV2AAVEETH_A = MCD_CLIP_UNIV2AAVEETH_A;
-var MCD_CLIP_UNIV2DAIUSDT_A = 'MCD_CLIP_UNIV2DAIUSDT_A';
-exports.MCD_CLIP_UNIV2DAIUSDT_A = MCD_CLIP_UNIV2DAIUSDT_A;
-var MCD_CLIP_UNIV2DAIUSDC_A = 'MCD_CLIP_UNIV2DAIUSDC_A';
-exports.MCD_CLIP_UNIV2DAIUSDC_A = MCD_CLIP_UNIV2DAIUSDC_A;
-var MCD_CLIP_USDC_A = 'MCD_CLIP_USDC_A';
-exports.MCD_CLIP_USDC_A = MCD_CLIP_USDC_A;
-var MCD_CLIP_USDC_B = 'MCD_CLIP_USDC_B';
-exports.MCD_CLIP_USDC_B = MCD_CLIP_USDC_B;
-var MCD_CLIP_TUSD_A = 'MCD_CLIP_TUSD_A';
-exports.MCD_CLIP_TUSD_A = MCD_CLIP_TUSD_A;
-var MCD_CLIP_PAXUSD_A = 'MCD_CLIP_PAXUSD_A';
-exports.MCD_CLIP_PAXUSD_A = MCD_CLIP_PAXUSD_A;
-var MCD_CLIP_GUSD_A = 'MCD_CLIP_GUSD_A';
-exports.MCD_CLIP_GUSD_A = MCD_CLIP_GUSD_A;
-var MCD_CLIP_USDT_A = 'MCD_CLIP_USDT_A';
-exports.MCD_CLIP_USDT_A = MCD_CLIP_USDT_A;
-var ALL_CLIPS = [MCD_CLIP_AAVE_A, MCD_CLIP_BAL_A, MCD_CLIP_BAT_A, MCD_CLIP_COMP_A, MCD_CLIP_ETH_A, MCD_CLIP_ETH_B, MCD_CLIP_ETH_C, MCD_CLIP_KNC_A, MCD_CLIP_LINK_A, MCD_CLIP_LRC_A, MCD_CLIP_MANA_A, MCD_CLIP_RENBTC_A, MCD_CLIP_UNI_A, MCD_CLIP_WBTC_A, MCD_CLIP_YFI_A, MCD_CLIP_ZRX_A, MCD_CLIP_UNIV2DAIETH_A, MCD_CLIP_UNIV2USDCETH_A, MCD_CLIP_UNIV2ETHUSDT_A, MCD_CLIP_UNIV2WBTCDAI_A, MCD_CLIP_UNIV2WBTCETH_A, MCD_CLIP_UNIV2LINKETH_A, MCD_CLIP_UNIV2UNIETH_A, MCD_CLIP_UNIV2AAVEETH_A, MCD_CLIP_UNIV2DAIUSDT_A, MCD_CLIP_UNIV2DAIUSDC_A, MCD_CLIP_USDC_A, MCD_CLIP_USDC_B, MCD_CLIP_TUSD_A, MCD_CLIP_PAXUSD_A, MCD_CLIP_GUSD_A, MCD_CLIP_USDT_A];
+var MCD_CLIP_WAG_VLXVDGT_A = 'MCD_CLIP_WAG_VLXVDGT_A';
+exports.MCD_CLIP_WAG_VLXVDGT_A = MCD_CLIP_WAG_VLXVDGT_A;
+
+var ALL_CLIPS = [MCD_CLIP_VLX_A, MCD_CLIP_WAG_A, MCD_CLIP_VDGT_A, MCD_CLIP_WBTC_A, MCD_CLIP_WAG_VLXVDGT_A];
 exports.ALL_CLIPS = ALL_CLIPS;
\ No newline at end of file
diff --git a/node_modules/@makerdao/dai-plugin-liquidations/dist/utils/tracksTransactions.js b/node_modules/@makerdao/dai-plugin-liquidations/dist/utils/tracksTransactions.js
index 58c48b5..52119b5 100644
--- a/node_modules/@makerdao/dai-plugin-liquidations/dist/utils/tracksTransactions.js
+++ b/node_modules/@makerdao/dai-plugin-liquidations/dist/utils/tracksTransactions.js
@@ -87,7 +87,7 @@ function tracksTransactionsWithOptions(_ref) {
               case 2:
                 // if there's already a promise, reuse it instead of setting this one--
                 // this allows the function we're running to behave differently when
-                // it's called directly vs. by another function. e.g. lockWeth
+                // it's called directly vs. by another function. e.g. lockVlx
                 if (!options.promise) options.promise = promise; // pad the list of arguments with `undefined` to account for any missing
                 // ones with default values.
 
diff --git a/node_modules/@makerdao/dai-plugin-liquidations/src/LiquidationService.js b/node_modules/@makerdao/dai-plugin-liquidations/src/LiquidationService.js
index 1d06e7b..75d553b 100644
--- a/node_modules/@makerdao/dai-plugin-liquidations/src/LiquidationService.js
+++ b/node_modules/@makerdao/dai-plugin-liquidations/src/LiquidationService.js
@@ -232,7 +232,7 @@ export default class LiquidationService extends PublicService {
   /* TAKE
     uint256 id,           // Auction id
     uint256 amt,          // Upper limit on amount of collateral to buy  [wad]
-    uint256 max,          // Maximum acceptable price (DAI / collateral) [ray]
+    uint256 max,          // Maximum acceptable price (USDV / collateral) [ray]
     address who,          // Receiver of collateral and external call address
     bytes calldata data   // Data to pass in external call; if length 0, no call is done
   */
@@ -272,7 +272,7 @@ export default class LiquidationService extends PublicService {
 
   /* struct Sale {
         uint256 pos;  // Index in active array
-        uint256 tab;  // Dai to raise       [rad]
+        uint256 tab;  // Usdv to raise       [rad]
         uint256 lot;  // collateral to sell [wad]
         address usr;  // Liquidated CDP
         uint96  tic;  // Auction start time
@@ -339,21 +339,21 @@ export default class LiquidationService extends PublicService {
   // }
 
   @tracksTransactions
-  async joinDaiToAdapter(amount, { promise }) {
+  async joinUsdvToAdapter(amount, { promise }) {
     const address = this.get('web3').currentAddress();
     const amt = BigNumber(amount)
       .times(WAD)
       .toFixed();
-    return await this._joinDaiAdapter().join(address, amt, { promise });
+    return await this._joinUsdvAdapter().join(address, amt, { promise });
   }
 
   @tracksTransactions
-  async exitDaiFromAdapter(amount, { promise }) {
+  async exitUsdvFromAdapter(amount, { promise }) {
     const address = this.get('web3').currentAddress();
     const amt = BigNumber(amount)
       .times(WAD)
       .toFixed();
-    return await this._joinDaiAdapter().exit(address, amt, { promise });
+    return await this._joinUsdvAdapter().exit(address, amt, { promise });
   }
 
   @tracksTransactions
@@ -394,8 +394,8 @@ export default class LiquidationService extends PublicService {
     return this.get('smartContract').getContractByName('MCD_DOG');
   }
 
-  _joinDaiAdapter() {
-    return this.get('smartContract').getContractByName('MCD_JOIN_DAI');
+  _joinUsdvAdapter() {
+    return this.get('smartContract').getContractByName('MCD_JOIN_USDV');
   }
 
   _joinGemAdapter(ilk) {
diff --git a/node_modules/@makerdao/dai-plugin-liquidations/src/index.js b/node_modules/@makerdao/dai-plugin-liquidations/src/index.js
index e555efd..5ea7190 100644
--- a/node_modules/@makerdao/dai-plugin-liquidations/src/index.js
+++ b/node_modules/@makerdao/dai-plugin-liquidations/src/index.js
@@ -5,8 +5,10 @@ import LiquidationService from './LiquidationService';
 export default {
   addConfig: function(config, { vulcanize = true }) {
     const contractAddresses = {
-      kovan: require('../contracts/addresses/kovan.json'),
-      mainnet: require('../contracts/addresses/mainnet.json')
+      // kovan: require('../contracts/addresses/kovan.json'),
+      // mainnet: require('../contracts/addresses/mainnet.json'),
+      velas: require('../contracts/addresses/velas.json'),
+      velastestnet: require('../contracts/addresses/velastestnet.json')
     };
     try {
       contractAddresses.testnet = require('../contracts/addresses/testnet.json');
diff --git a/node_modules/@makerdao/dai-plugin-liquidations/src/utils/constants.js b/node_modules/@makerdao/dai-plugin-liquidations/src/utils/constants.js
index 0a21a1e..6c9e759 100644
--- a/node_modules/@makerdao/dai-plugin-liquidations/src/utils/constants.js
+++ b/node_modules/@makerdao/dai-plugin-liquidations/src/utils/constants.js
@@ -1,68 +1,14 @@
 export const MCD_DOG = 'MCD_DOG';
-export const MCD_CLIP_AAVE_A = 'MCD_CLIP_AAVE_A';
-export const MCD_CLIP_BAL_A = 'MCD_CLIP_BAL_A';
-export const MCD_CLIP_BAT_A = 'MCD_CLIP_BAT_A';
-export const MCD_CLIP_COMP_A = 'MCD_CLIP_COMP_A';
-export const MCD_CLIP_ETH_A = 'MCD_CLIP_ETH_A';
-export const MCD_CLIP_ETH_B = 'MCD_CLIP_ETH_B';
-export const MCD_CLIP_ETH_C = 'MCD_CLIP_ETH_C';
-export const MCD_CLIP_KNC_A = 'MCD_CLIP_KNC_A';
-export const MCD_CLIP_LINK_A = 'MCD_CLIP_LINK_A';
-export const MCD_CLIP_LRC_A = 'MCD_CLIP_LRC_A';
-export const MCD_CLIP_MANA_A = 'MCD_CLIP_MANA_A';
-export const MCD_CLIP_RENBTC_A = 'MCD_CLIP_RENBTC_A';
-export const MCD_CLIP_UNI_A = 'MCD_CLIP_UNI_A';
+export const MCD_CLIP_VLX_A = 'MCD_CLIP_VLX_A';
+export const MCD_CLIP_WAG_A = 'MCD_CLIP_WAG_A';
+export const MCD_CLIP_VDGT_A = 'MCD_CLIP_VDGT_A';
 export const MCD_CLIP_WBTC_A = 'MCD_CLIP_WBTC_A';
-export const MCD_CLIP_YFI_A = 'MCD_CLIP_YFI_A';
-export const MCD_CLIP_ZRX_A = 'MCD_CLIP_ZRX_A';
-export const MCD_CLIP_UNIV2DAIETH_A = 'MCD_CLIP_UNIV2DAIETH_A';
-export const MCD_CLIP_UNIV2USDCETH_A = 'MCD_CLIP_UNIV2USDCETH_A';
-export const MCD_CLIP_UNIV2ETHUSDT_A = 'MCD_CLIP_UNIV2ETHUSDT_A';
-export const MCD_CLIP_UNIV2WBTCDAI_A = 'MCD_CLIP_UNIV2WBTCDAI_A';
-export const MCD_CLIP_UNIV2WBTCETH_A = 'MCD_CLIP_UNIV2WBTCETH_A';
-export const MCD_CLIP_UNIV2LINKETH_A = 'MCD_CLIP_UNIV2LINKETH_A';
-export const MCD_CLIP_UNIV2UNIETH_A = 'MCD_CLIP_UNIV2UNIETH_A';
-export const MCD_CLIP_UNIV2AAVEETH_A = 'MCD_CLIP_UNIV2AAVEETH_A';
-export const MCD_CLIP_UNIV2DAIUSDT_A = 'MCD_CLIP_UNIV2DAIUSDT_A';
-export const MCD_CLIP_UNIV2DAIUSDC_A = 'MCD_CLIP_UNIV2DAIUSDC_A';
-export const MCD_CLIP_USDC_A = 'MCD_CLIP_USDC_A';
-export const MCD_CLIP_USDC_B = 'MCD_CLIP_USDC_B';
-export const MCD_CLIP_TUSD_A = 'MCD_CLIP_TUSD_A';
-export const MCD_CLIP_PAXUSD_A = 'MCD_CLIP_PAXUSD_A';
-export const MCD_CLIP_GUSD_A = 'MCD_CLIP_GUSD_A';
-export const MCD_CLIP_USDT_A = 'MCD_CLIP_USDT_A';
+export const MCD_CLIP_WAG_VLXVDGT_A = 'MCD_CLIP_WAG_VLXVDGT_A';
 
 export const ALL_CLIPS = [
-  MCD_CLIP_AAVE_A,
-  MCD_CLIP_BAL_A,
-  MCD_CLIP_BAT_A,
-  MCD_CLIP_COMP_A,
-  MCD_CLIP_ETH_A,
-  MCD_CLIP_ETH_B,
-  MCD_CLIP_ETH_C,
-  MCD_CLIP_KNC_A,
-  MCD_CLIP_LINK_A,
-  MCD_CLIP_LRC_A,
-  MCD_CLIP_MANA_A,
-  MCD_CLIP_RENBTC_A,
-  MCD_CLIP_UNI_A,
+  MCD_CLIP_VLX_A,
+  MCD_CLIP_WAG_A,
+  MCD_CLIP_VDGT_A,
   MCD_CLIP_WBTC_A,
-  MCD_CLIP_YFI_A,
-  MCD_CLIP_ZRX_A,
-  MCD_CLIP_UNIV2DAIETH_A,
-  MCD_CLIP_UNIV2USDCETH_A,
-  MCD_CLIP_UNIV2ETHUSDT_A,
-  MCD_CLIP_UNIV2WBTCDAI_A,
-  MCD_CLIP_UNIV2WBTCETH_A,
-  MCD_CLIP_UNIV2LINKETH_A,
-  MCD_CLIP_UNIV2UNIETH_A,
-  MCD_CLIP_UNIV2AAVEETH_A,
-  MCD_CLIP_UNIV2DAIUSDT_A,
-  MCD_CLIP_UNIV2DAIUSDC_A,
-  MCD_CLIP_USDC_A,
-  MCD_CLIP_USDC_B,
-  MCD_CLIP_TUSD_A,
-  MCD_CLIP_PAXUSD_A,
-  MCD_CLIP_GUSD_A,
-  MCD_CLIP_USDT_A
+  MCD_CLIP_WAG_VLXVDGT_A
 ];
diff --git a/node_modules/@makerdao/dai-plugin-liquidations/src/utils/tracksTransactions.js b/node_modules/@makerdao/dai-plugin-liquidations/src/utils/tracksTransactions.js
index c78c024..cc0101c 100644
--- a/node_modules/@makerdao/dai-plugin-liquidations/src/utils/tracksTransactions.js
+++ b/node_modules/@makerdao/dai-plugin-liquidations/src/utils/tracksTransactions.js
@@ -59,7 +59,7 @@ export function tracksTransactionsWithOptions({ numArguments }) {
 
         // if there's already a promise, reuse it instead of setting this one--
         // this allows the function we're running to behave differently when
-        // it's called directly vs. by another function. e.g. lockWeth
+        // it's called directly vs. by another function. e.g. lockWvlx
         if (!options.promise) options.promise = promise;
 
         // pad the list of arguments with `undefined` to account for any missing
